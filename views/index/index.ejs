<div class="container-fluid">

	<div class="wallpaper">
		<div class="wallpaperTexto">
			<h1>Energy Within</h1>
			<p>por um mundo mais sustentável</p>
		</div>
	</div>

	<h1 class="my-5">
		Relatório de Consumo Total
	</h1>
	
	<div class="row">
		<div class="col-sm-8 pb-4">

			<div class="card shadow">
				<div class="card-body">
					<form id="form">

						<div class="row">
							<div class="col-sm-6">
								<div class="form-group">
									<label for="dataInicial">Data Inicial</label>
									<input id="dataInicial" name="dataInicial" class="form-control" type="date" value="<%= anoInicial %>-<%= mesInicial %>-<%= diaInicial %>" />
								</div>
							</div>

							<div class="col-sm-6">
								<div class="form-group">
									<label for="dataFinal">Data Final</label>
									<input id="dataFinal" name="dataFinal" class="form-control" type="date" value="<%= anoFinal %>-<%= mesFinal %>-<%= diaFinal %>" />
								</div>
							</div>
						</div>

						<button type="submit" class="btn btn-primary">Listar</button>
					</form>
				</div>
			</div>

		</div>
	</div>

	<div class="card shadow mb-4">
		<div class="card-body" id="div-grafico">
			<div class="text-center">
				Preencha os campos e clique em Listar para analisar o consumo.
			</div>
		</div>
	</div>

</div>

<script src="/public/js/jquery-validate/jquery.validate.min.js"></script>
<script src="/public/js/jquery-validate/additional-methods.min.js"></script>
<script src="/public/js/jquery-validate/localization/messages_pt_BR.min.js"></script>
<script type="text/javascript" src="/public/js/chart.js/chart.min.js"></script>

<script type="text/javascript">
	"use strict";

	$("#form").validate({
		rules: {
			dataInicial: {
				required: true
			},
			dataFinal: {
				required: true
			}
		},
		submitHandler: function () {
			atualizarDados();
		}
	});

	async function atualizarDados() {
		waitSwal();

		try {

			let response = await fetch("/api/consumo/listarTotalPorData?dataInicial=" + $("#dataInicial").val() + '&dataFinal=' + $('#dataFinal').val());

			if (response.ok) {

				Swal.close();

				let div = document.getElementById("div-grafico");
				div.innerHTML = '<canvas id="grafico-barras" style="height: 50vh;"></canvas>';

				let labels = [], data = [];

				let dados = await response.json();
				if (!dados || !dados.length) {
					Swal.fire("Erro", "Sem dados na data especificada!", "error");
					return;
				}

				for (let i = 0; i < dados.length; i++) {
					labels.push(dados[i].dia);
					data.push(dados[i].consumo);
				}

				let grafico = new Chart(document.getElementById("grafico-barras"), {
					type: "bar",
					data: {
						labels: labels,
						datasets: [{
							label: "Consumo Total (kW.h)",
							backgroundColor: "#4e73df",
							hoverBackgroundColor: "#2e59d9",
							borderColor: "#4e73df",
							data: data,
						}],
					},
					options: {
						maintainAspectRatio: false,
						layout: {
							padding: {
								left: 10,
								right: 25,
								top: 25,
								bottom: 0
							}
						},
						scales: {
							x: {
								gridLines: {
									display: false,
									drawBorder: false
								},
								ticks: {
									maxTicksLimit: 10
								},
								maxBarThickness: 25,
							},
							y: {
								//display: false,
								ticks: {
									min: 0,
									max: 10,
									maxTicksLimit: 10,
									padding: 10
								},
								gridLines: {
									color: "rgb(234, 236, 244)",
									zeroLineColor: "rgb(234, 236, 244)",
									drawBorder: false,
									borderDash: [2],
									zeroLineBorderDash: [2]
								}
							},
						},
						legend: {
							display: false
						},
						tooltips: {
							titleMarginBottom: 10,
							titleFontColor: '#6e707e',
							titleFontSize: 14,
							backgroundColor: "rgb(255,255,255)",
							bodyFontColor: "#858796",
							borderColor: '#dddfeb',
							borderWidth: 1,
							xPadding: 15,
							yPadding: 15,
							displayColors: false,
							caretPadding: 10
						},
					}
				});

			} else {
				await exibirErro(response);
			}

		} catch (ex) {
			Swal.fire("Erro", "Erro ao listar os dados: " + ex.message, "error");
		}
	}

	//atualizarDados();

</script>
